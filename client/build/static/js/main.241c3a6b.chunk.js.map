{"version":3,"sources":["pages/Home/Home.js","components/StockChart/StockChart.js","components/Banner/Banner.js","components/Stocklist/Stocklist.js","components/Wrapper/Wrapper.js","components/StockInfo/StockInfo.js","components/Table/Table.js","components/Headlines/Headlines.js","components/Modal/Modal.js","components/BuyModal/BuyModal.js","pages/Nyse/Nyse.js","pages/Nasdaq/Nasdaq.js","pages/Crypto/Crypto.js","components/PortfolioTable/PortfolioTable.js","components/BarChart/BarChart.js","pages/Portfolio/Portfolio.js","components/Nav/Nav.js","components/Auth/SignInWidget.js","components/Auth/Login.js","App.js","serviceWorker.js","index.js"],"names":["withAuth","_Component","Home","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","authenticated","checkAuthentication","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","props","auth","isAuthenticated","sent","setState","stop","login","_callee2","_context2","logout","_callee3","_context3","inherits","createClass","key","value","_componentDidMount","_callee4","_context4","_componentDidUpdate","_callee5","_context5","mainContent","react_default","createElement","onClick","className","Component","MyStockChart","react_apexcharts_min_default","options","series","type","height","width","Banner","exchange","info","Stocklist","onChange","inputChangeHandler","search","name","placeholder","id","stockSearchHandler","allStocks","Wrapper","children","StockInfo","company","latestPrice","latestTime","open","high","low","newsHeadlinesHandler","min","max","shares","sharesInputHandler","sharesPurchaseHandler","StockTable","stocks","map","stockQueryHandler","symbol","company_name","Headlines","news","href","url","target","rel","datetime","headline","showQuoteHandler","Modal","total","buyStockHandler","cancelOrderHandler","BuyModal","Nyse","companyName","market","showTable","showHeadlines","showStockInfo","showModal","showBuyModal","currentUserEmail","currentUserName","allNyse","event","preventDefault","Axios","get","then","response","data","defineProperty","answer","toFixed","todayDate","Date","toISOString","slice","post","buy_date","buy_price","current_price","UserId","console","log","catch","error","query","dates","values","chart","dateArray","dataArray","highArray","lowArray","day","push","label","close","background","markers","colors","stacked","fontFamily","dropShadow","enabled","top","left","blur","opacity","animations","easing","speed","animateGradually","delay","dynamicAnimation","xaxis","categories","title","text","quote","align","margin","offsetX","offsetY","floating","style","fontSize","color","primaryExchange","week52High","week52Low","iexNyseGet","idToken","JSON","parse","localStorage","getItem","claims","email","components_Modal_Modal","components_BuyModal_BuyModal","components_Wrapper_Wrapper","components_Banner_Banner","components_StockInfo_StockInfo","sharesNum","components_Headlines_Headlines","StockChart_StockChart","components_Stocklist_Stocklist","Table_Table","Nasdaq","allNasdaq","iexNasdaqGet","CryptoCurrency","allCrypto","iexCryptoGet","PortfolioTable","owns","net_total","updatePriceHandler","sellStockHandler","BarChart","labels","userId","Portfolio","stocksOwned","showPortfolioHandler","donutData","companyArray","totalArray","item","soldStock","delete","updateQuery","updatedData","put","components_BarChart_BarChart","components_PortfolioTable_PortfolioTable","Nav","Link","to","SignInWidget","el","ReactDOM","findDOMNode","widget","OktaSignIn","baseUrl","logo","renderEl","onSuccess","onError","remove","Login","bind","assertThisInitialized","authentication","_checkAuthentication","res","redirect","sessionToken","session","token","err","Redirect","pathname","Auth_SignInWidget","config","issuer","redirect_uri","window","location","origin","client_id","onAuthRequired","_ref","history","App","BrowserRouter","dist","components_Nav_Nav","Switch","Route","exact","path","component","render","Auth_Login","ImplicitCallback","Boolean","hostname","match","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.241c3a6b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withAuth } from \"@okta/okta-react\";\r\nimport \"./Home.css\";\r\n\r\nexport default withAuth(class Home extends Component {\r\n    state = { authenticated: null };\r\n\r\n    checkAuthentication = async() => {\r\n        const authenticated = await this.props.auth.isAuthenticated();\r\n        if(authenticated !== this.state.authenticated) {\r\n            this.setState({ authenticated });\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.checkAuthentication();\r\n    }\r\n\r\n    async componentDidUpdate() {\r\n        this.checkAuthentication();\r\n    }\r\n\r\n    login = async() => {\r\n        this.props.auth.login('/');\r\n    }\r\n\r\n    logout = async() => {\r\n        this.props.auth.logout('/')\r\n    }\r\n\r\n    render() {\r\n        if (this.state.authenticated === null) return null;\r\n\r\n        const mainContent = this.state.authenticated ? (\r\n            <div>\r\n                <p>You have logged in</p>\r\n                <button onClick={this.logout}>Logout</button>\r\n            </div>\r\n        ) : (\r\n            <div>\r\n                <p>Please Login/Signup</p>\r\n                <button onClick={this.login}>Login</button>\r\n            </div>\r\n        )\r\n\r\n        return (\r\n            <div className=\"home-div\">\r\n                <div className=\"home-div-sub\">\r\n                \r\n                </div>\r\n                <div className=\"login-div\">\r\n                    {mainContent}\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n})\r\n\r\n","import React from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nimport \"./StockChart.css\";\r\n\r\nconst MyStockChart = (props) => (\r\n    <div className=\"chart-div\">\r\n        <Chart\r\n            options={props.options}\r\n            series={props.series}\r\n            type=\"line\"\r\n            height=\"100%\"\r\n            width=\"100%\"\r\n        />\r\n    </div>\r\n);\r\n\r\nexport default MyStockChart;","import React from 'react';\r\nimport './Banner.css';\r\n\r\nconst Banner = (props) => (\r\n    <div className=\"banner-div\">\r\n        <h1>{props.exchange}</h1>\r\n        <p>{props.info}</p>\r\n    </div>\r\n);\r\n\r\nexport default Banner;","import React from 'react';\r\nimport './Stocklist.css';\r\n\r\nconst Stocklist = props => (\r\n    <div className=\"list-div\">\r\n        <h2>Marketplace</h2>\r\n        <input\r\n            onChange={props.inputChangeHandler}\r\n            value={props.search}\r\n            name=\"search\"\r\n            type=\"text\"\r\n            placeholder=\"Search for company...\"\r\n            id=\"search\"\r\n        />\r\n        <button onClick={props.stockSearchHandler}>Search</button>\r\n        \r\n        <button onClick={props.allStocks}>Browse All {props.exchange} Stocks</button>\r\n    </div>\r\n    \r\n);\r\n\r\nexport default Stocklist;","import React from \"react\";\r\nimport \"./Wrapper.css\";\r\n\r\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\r\n\r\nexport default Wrapper;","import React from 'react';\r\nimport './StockInfo.css';\r\n\r\nconst StockInfo = props => (\r\n    <div className=\"info-div\">\r\n        <h2>{props.company}</h2>\r\n        <h3><span>Latest Price</span>: ${props.latestPrice}</h3>\r\n        <h3><span>As of</span>: {props.latestTime}</h3>\r\n        <h3><span>Open Price</span>: ${props.open}</h3>\r\n        <h3><span>52 Week High</span>: ${props.high}</h3>\r\n        <h3><span>52 Week Low</span>: ${props.low}</h3>\r\n        <div className=\"stockInfo-btn-div\">\r\n            <button className=\"stockInfo-btn\" onClick={props.newsHeadlinesHandler}>Latest Headlines</button>\r\n        </div>\r\n        \r\n        <hr />\r\n\r\n        <h2>Buy Shares</h2>\r\n        <div className=\"buy-div\">\r\n            <input className=\"buy-div-input\" \r\n                   type=\"number\" \r\n                   name=\"shares\" \r\n                   min=\"1\" \r\n                   max=\"100\" \r\n                   placeholder=\"Shares\" \r\n                   value={props.shares}\r\n                   onChange={props.sharesInputHandler}\r\n            />\r\n            <button className=\"buy-div-btn\" onClick={props.sharesPurchaseHandler}>Submit</button>\r\n        </div>\r\n\r\n        \r\n    </div>\r\n);\r\n\r\nexport default StockInfo;","import React from \"react\";\r\nimport \"./Table.css\";\r\n\r\nconst StockTable = props => (\r\n    <table className=\"stockList\">\r\n        <thead className=\"stock-thead\">\r\n            <tr>\r\n                <th>Symbol</th>\r\n                <th className=\"cname\">Company</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody className=\"stock-tbody\">\r\n            {props.stocks.map(stocks => (\r\n                <tr key={stocks.id}>\r\n                    <button className=\"table-btn\" onClick={props.stockQueryHandler} value={stocks.symbol}>{stocks.symbol}</button>\r\n                    <td className=\"cname\">{stocks.company_name}</td>\r\n                </tr>\r\n            ))}\r\n        </tbody>\r\n    </table>\r\n);\r\n\r\nexport default StockTable;","import React from \"react\";\r\nimport \"./Headlines.css\";\r\n\r\nconst Headlines = props => (\r\n    <div className=\"headlines-div\">\r\n        <h2>Latest Headlines</h2>\r\n        {props.news.map(news => (\r\n        <a href={news.url} target=\"_blank\" rel=\"noopener\"><h5 key={news.datetime}>{news.headline}</h5></a>\r\n    ))}\r\n\r\n    <button onClick={props.showQuoteHandler}>Show Quote</button>\r\n    </div>\r\n);\r\n\r\nexport default Headlines;","import React from \"react\";\r\nimport \"./Modal.css\";\r\n\r\nconst Modal = props => (\r\n    <div className=\"modal\">\r\n        <h1>Confirm Order</h1>\r\n        <h3>Buy {props.shares} shares of {props.company} for ${props.total}?</h3>\r\n        <button onClick={props.buyStockHandler}>BUY!</button>\r\n        <button onClick={props.cancelOrderHandler}>Cancel</button>\r\n    </div>\r\n);\r\n\r\nexport default Modal;","import React from \"react\";\r\nimport \"./BuyModal.css\";\r\n\r\nconst BuyModal = (props) => (\r\n    <div className=\"buy-modal\">\r\n        <h1>Transaction Successful!</h1>\r\n        <button onClick={props.cancelOrderHandler}>Close</button>\r\n    </div>\r\n);\r\n\r\nexport default BuyModal;","import React, { Component } from \"react\";\r\nimport \"./Nyse.css\";\r\nimport Axios from \"axios\";\r\nimport MyStockChart from \"../../components/StockChart\";\r\nimport Banner from \"../../components/Banner\";\r\nimport Stocklist from \"../../components/Stocklist\";\r\nimport Wrapper from \"../../components/Wrapper\";\r\nimport StockInfo from \"../../components/StockInfo\";\r\nimport StockTable from \"../../components/Table\";\r\nimport Headlines from \"../../components/Headlines\";\r\nimport Modal from \"../../components/Modal\";\r\nimport BuyModal from \"../../components/BuyModal\";\r\n\r\n\r\n\r\nclass Nyse extends Component {\r\n    state = {\r\n        options: {},\r\n        series: [],\r\n        stocks: [],\r\n        news: [],\r\n        companyName: \"\",\r\n        symbol: \"\",\r\n        market: \"\",\r\n        latestPrice: \"\",\r\n        latestTime: \"\",\r\n        open: \"\",\r\n        high: \"\",\r\n        low: \"\",\r\n        search: \"\",\r\n        shares: \"\",\r\n        total: \"\",\r\n        showTable: false,\r\n        showHeadlines: false,\r\n        showStockInfo: true,\r\n        showModal: false,\r\n        showBuyModal: false,\r\n        currentUserEmail: \"\",\r\n        currentUserName: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.iexNyseGet();\r\n        const idToken = JSON.parse(localStorage.getItem('okta-token-storage'));\r\n        this.setState({\r\n            currentUserEmail: idToken.idToken.claims.email,\r\n            currentUserName: idToken.idToken.claims.name\r\n        });\r\n    }\r\n\r\n    allNyse = event => {\r\n        event.preventDefault();\r\n        Axios.get(\"/api/allNyse\")\r\n            .then(response => {\r\n                this.setState({\r\n                    stocks: response.data,\r\n                    showTable: true\r\n                })\r\n            });\r\n    }\r\n\r\n    inputChangeHandler = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    sharesInputHandler = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    stockSearchHandler = event => {\r\n        event.preventDefault();\r\n        Axios.get(\"/api/nyse/\" + this.state.search)\r\n            .then(response => {\r\n                this.setState({\r\n                    stocks: response.data,\r\n                    showTable: true\r\n                })\r\n            });\r\n    }\r\n\r\n    newsHeadlinesHandler = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showStockInfo: false,\r\n            showHeadlines: true\r\n        });\r\n    }\r\n\r\n    showQuoteHandler = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showHeadlines: false,\r\n            showStockInfo: true\r\n        });\r\n    }\r\n\r\n    sharesPurchaseHandler = () => {\r\n        const mult = this.state.latestPrice;\r\n        const mult1 = this.state.shares;\r\n        const answer = mult * mult1;\r\n        this.setState({\r\n            total: answer.toFixed(2),\r\n            showModal: true\r\n        });\r\n    }\r\n\r\n    cancelOrderHandler = () => {\r\n        this.setState({\r\n            showModal: false,\r\n            showBuyModal: false\r\n        });\r\n    }\r\n\r\n    buyStockHandler = () => {\r\n        this.setState({\r\n            showModal: false,\r\n            showBuyModal: true\r\n        });\r\n        let todayDate = new Date().toISOString().slice(0,10);\r\n        Axios.post(\"api/stocks\", {\r\n            symbol: this.state.symbol,\r\n            company_name: this.state.companyName,\r\n            market: this.state.market,\r\n            shares: this.state.shares,\r\n            buy_date: todayDate,\r\n            buy_price: this.state.latestPrice,\r\n            current_price: this.state.latestPrice,\r\n            UserId: 1\r\n        })\r\n        .then(function (response) {\r\n            console.log(response);\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n\r\n\r\n    stockQueryHandler = event => {\r\n        const query = event.target.value;\r\n        Axios.get(\"https://api.iextrading.com/1.0//stock/\" + query + \"/batch?types=quote,news,chart&range=1m&last=7\")\r\n            .then(response => {\r\n                const dates = Object.values(response.data.chart);\r\n                const dateArray = [];\r\n                const dataArray = [];\r\n                const highArray = [];\r\n                const lowArray = [];\r\n                dates.map(day => {\r\n                    dateArray.push(day.label);\r\n                    dataArray.push(day.close);\r\n                    highArray.push(day.high);\r\n                    lowArray.push(day.low);\r\n                    return dateArray && dataArray && highArray && lowArray\r\n                })\r\n                this.setState({\r\n                        options: {\r\n                            chart: {\r\n                                background: '#e6ecff',\r\n                                markers: {\r\n                                    colors:['#FF0000', '#00cc00', '#0000ff']\r\n                                },\r\n                                stacked: false,\r\n                                fontFamily: 'Patua One, cursive, serif',\r\n                                dropShadow: {\r\n                                    enabled: true,\r\n                                    top: 0,\r\n                                    left: 0,\r\n                                    blur: 3,\r\n                                    opacity: 0.5\r\n                                },\r\n                                animations: {\r\n                                    enabled: true,\r\n                                    easing: 'easeout',\r\n                                    speed: 350,\r\n                                    animateGradually: {\r\n                                        enabled: true,\r\n                                        delay: 350\r\n                                    },\r\n                                    dynamicAnimation: {\r\n                                        enabled: true,\r\n                                        speed: 1100\r\n                                    }\r\n                                }\r\n                            },\r\n                            xaxis: {\r\n                                categories: dateArray,\r\n                            },\r\n                            title: {\r\n                                text: response.data.quote.companyName,\r\n                                align: 'center',\r\n                                margin: 10,\r\n                                offsetX: 0,\r\n                                offsetY: 0,\r\n                                floating: false,\r\n                                style: {\r\n                                  fontSize:  '30px',\r\n                                  color:  '#263238'\r\n                                },\r\n                            },\r\n                        },\r\n                        series: [\r\n                            \r\n                            {\r\n                                name: 'High',\r\n                                type: 'column',\r\n                                data: highArray\r\n                            },\r\n                            {\r\n\r\n                                name: 'Low',\r\n                                type: 'column',\r\n                                data: lowArray\r\n                            },\r\n                            {\r\n                                name: 'Close',\r\n                                type: 'line',\r\n                                data: dataArray\r\n                            }\r\n                        ],\r\n                        companyName: response.data.quote.companyName,\r\n                        symbol: response.data.quote.symbol,\r\n                        market: response.data.quote.primaryExchange,\r\n                        latestPrice: response.data.quote.latestPrice,\r\n                        latestTime: response.data.quote.latestTime,\r\n                        open: response.data.quote.open,\r\n                        high: response.data.quote.week52High,\r\n                        low: response.data.quote.week52Low,\r\n                        news: response.data.news\r\n                        \r\n                })\r\n            \r\n            })\r\n\r\n    }\r\n\r\n    iexNyseGet = () => {\r\n        Axios.get(\"https://api.iextrading.com/1.0//stock/DUK/batch?types=quote,news,chart&range=1m&last=7\")\r\n            .then(response => {\r\n                console.log(response.data);\r\n                const dates = Object.values(response.data.chart);\r\n                const dateArray = [];\r\n                const dataArray = [];\r\n                const highArray = [];\r\n                const lowArray = [];\r\n                dates.map(day => {\r\n                    dateArray.push(day.label);\r\n                    dataArray.push(day.close);\r\n                    highArray.push(day.high);\r\n                    lowArray.push(day.low);\r\n                    return dateArray && dataArray && highArray && lowArray\r\n                })\r\n                this.setState({\r\n                        options: {\r\n                            chart: {\r\n                                background: '#e6ecff',\r\n                                markers: {\r\n                                    colors:['#FF0000', '#00cc00', '#0000ff']\r\n                                },\r\n                                stacked: false,\r\n                                fontFamily: 'Patua One, cursive, serif',\r\n                                dropShadow: {\r\n                                    enabled: true,\r\n                                    top: 0,\r\n                                    left: 0,\r\n                                    blur: 3,\r\n                                    opacity: 0.5\r\n                                },\r\n                                animations: {\r\n                                    enabled: true,\r\n                                    easing: 'easeout',\r\n                                    speed: 350,\r\n                                    animateGradually: {\r\n                                        enabled: true,\r\n                                        delay: 350\r\n                                    },\r\n                                    dynamicAnimation: {\r\n                                        enabled: true,\r\n                                        speed: 1100\r\n                                    }\r\n                                }\r\n                            },\r\n                            xaxis: {\r\n                                categories: dateArray,\r\n                            },\r\n                            title: {\r\n                                text: response.data.quote.companyName,\r\n                                align: 'center',\r\n                                margin: 10,\r\n                                offsetX: 0,\r\n                                offsetY: 0,\r\n                                floating: false,\r\n                                style: {\r\n                                  fontSize:  '30px',\r\n                                  color:  '#263238'\r\n                                },\r\n                            },\r\n                        },\r\n                        series: [\r\n                            \r\n                            {\r\n                                name: 'High',\r\n                                type: 'column',\r\n                                data: highArray\r\n                            },\r\n                            {\r\n\r\n                                name: 'Low',\r\n                                type: 'column',\r\n                                data: lowArray\r\n                            },\r\n                            {\r\n                                name: 'Close',\r\n                                type: 'line',\r\n                                data: dataArray\r\n                            }\r\n                        ],\r\n                        companyName: response.data.quote.companyName,\r\n                        symbol: response.data.quote.symbol,\r\n                        market: response.data.quote.primaryExchange,\r\n                        latestPrice: response.data.quote.latestPrice,\r\n                        latestTime: response.data.quote.latestTime,\r\n                        open: response.data.quote.open,\r\n                        high: response.data.quote.week52High,\r\n                        low: response.data.quote.week52Low,\r\n                        news: response.data.news\r\n                        \r\n                })\r\n            \r\n            })\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                {this.state.showModal === true ?\r\n                    <Modal shares={this.state.shares}\r\n                    company={this.state.companyName}\r\n                    total={this.state.total}\r\n                    cancelOrderHandler={this.cancelOrderHandler}\r\n                    buyStockHandler={this.buyStockHandler}\r\n                    /> : null\r\n                }\r\n                {this.state.showBuyModal === true ?\r\n                    <BuyModal cancelOrderHandler={this.cancelOrderHandler}/> : null\r\n                }\r\n                \r\n                <Wrapper>\r\n                    <Banner \r\n                        exchange={\"The New York Stock Exchange\"}\r\n                        info={\"The New York Stock Exchange (NYSE) is the worlds largest securities exchange.  It provides a marketplace for buying and selling 9.3 million corporate stocks and other securities a day.  It lists 82 percent of the S&P 500, 90 percent of the Dow Jones Industrial Average, and 70 of the world's largest corporations.  It is, itself, a publicly-traded company with nearly 3,000 employees. Its ticker symbol is ICE (Intercontinental Exchange).  In general, the older, established large companies such as General Electric, Coca-Cola, Ford, and Wells Fargo are listed on the NYSE.\"}\r\n                    />\r\n                </Wrapper>\r\n                \r\n            \r\n                <Wrapper>\r\n                    <div className=\"list-wrapper\">\r\n                        {this.state.showStockInfo === true ?\r\n                            <StockInfo company={this.state.companyName}\r\n                            latestPrice={this.state.latestPrice}\r\n                            latestTime={this.state.latestTime}\r\n                            open={this.state.open}\r\n                            high={this.state.high}\r\n                            low={this.state.low}\r\n                            sharesNum={this.state.sharesNum}\r\n                            newsHeadlinesHandler={this.newsHeadlinesHandler}\r\n                            sharesPurchaseHandler={this.sharesPurchaseHandler}\r\n                            sharesInputHandler={this.sharesInputHandler}\r\n                            /> : null\r\n                        }\r\n                        {this.state.showHeadlines === true ?\r\n                            <Headlines news={this.state.news}\r\n                                       showQuoteHandler={this.showQuoteHandler}\r\n                            /> : null\r\n                    \r\n                        }\r\n                    </div>\r\n                    \r\n                    <MyStockChart options={this.state.options} \r\n                                  series={this.state.series}/>\r\n                    <div className=\"list-wrapper\">\r\n                        <Stocklist search={this.state.search}\r\n                                inputChangeHandler={this.inputChangeHandler}\r\n                                stockSearchHandler={this.stockSearchHandler}\r\n                                allStocks={this.allNyse}\r\n                                exchange={\"NYSE\"}\r\n                        />\r\n                        {this.state.showTable === true ?\r\n                            <StockTable \r\n                                stocks={this.state.stocks}\r\n                                stockQueryHandler={this.stockQueryHandler}\r\n                            /> : null}\r\n                    </div>\r\n                    \r\n                </Wrapper>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Nyse;","import React, { Component } from \"react\";\r\nimport \"./Nasdaq.css\";\r\nimport Axios from \"axios\";\r\nimport MyStockChart from \"../../components/StockChart\";\r\nimport Banner from \"../../components/Banner\";\r\nimport Stocklist from \"../../components/Stocklist\";\r\nimport Wrapper from \"../../components/Wrapper\";\r\nimport StockInfo from \"../../components/StockInfo\";\r\nimport StockTable from \"../../components/Table\";\r\nimport Headlines from \"../../components/Headlines\";\r\nimport Modal from \"../../components/Modal\";\r\nimport BuyModal from \"../../components/BuyModal\";\r\n\r\n\r\n\r\nclass Nasdaq extends Component {\r\n    state = {\r\n        options: {},\r\n        series: [],\r\n        stocks: [],\r\n        news: [],\r\n        companyName: \"\",\r\n        symbol: \"\",\r\n        market: \"\",\r\n        latestPrice: \"\",\r\n        latestTime: \"\",\r\n        open: \"\",\r\n        high: \"\",\r\n        low: \"\",\r\n        search: \"\",\r\n        shares: \"\",\r\n        total: \"\",\r\n        showTable: false,\r\n        showHeadlines: false,\r\n        showStockInfo: true,\r\n        showModal: false,\r\n        showBuyModal: false,\r\n        currentUserEmail: \"\",\r\n        currentUserName: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.iexNasdaqGet();\r\n        const idToken = JSON.parse(localStorage.getItem('okta-token-storage'));\r\n        this.setState({\r\n            currentUserEmail: idToken.idToken.claims.email,\r\n            currentUserName: idToken.idToken.claims.name\r\n        });\r\n        \r\n    }\r\n\r\n    allNasdaq = event => {\r\n        event.preventDefault();\r\n        Axios.get(\"/api/allNasdaq\")\r\n            .then(response => {\r\n                this.setState({\r\n                    stocks: response.data,\r\n                    showTable: true\r\n                })\r\n            });\r\n    }\r\n\r\n    inputChangeHandler = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    sharesInputHandler = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    stockSearchHandler = event => {\r\n        event.preventDefault();\r\n        Axios.get(\"/api/nasdaq/\" + this.state.search)\r\n            .then(response => {\r\n                this.setState({\r\n                    stocks: response.data,\r\n                    showTable: true\r\n                })\r\n            });\r\n    }\r\n\r\n    newsHeadlinesHandler = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showStockInfo: false,\r\n            showHeadlines: true\r\n        });\r\n    }\r\n\r\n    showQuoteHandler = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showHeadlines: false,\r\n            showStockInfo: true\r\n        });\r\n    }\r\n\r\n    sharesPurchaseHandler = () => {\r\n        const mult = this.state.latestPrice;\r\n        const mult1 = this.state.shares;\r\n        const answer = mult * mult1;\r\n        this.setState({\r\n            total: answer.toFixed(2),\r\n            showModal: true\r\n        });\r\n    }\r\n\r\n    cancelOrderHandler = () => {\r\n        this.setState({\r\n            showModal: false,\r\n            showBuyModal: false\r\n        });\r\n    }\r\n\r\n    buyStockHandler = () => {\r\n        this.setState({\r\n            showModal: false,\r\n            showBuyModal: true\r\n        });\r\n        let todayDate = new Date().toISOString().slice(0,10);\r\n        Axios.post(\"api/stocks\", {\r\n            symbol: this.state.symbol,\r\n            company_name: this.state.companyName,\r\n            market: this.state.market,\r\n            shares: this.state.shares,\r\n            buy_date: todayDate,\r\n            buy_price: this.state.latestPrice,\r\n            current_price: this.state.latestPrice,\r\n            UserId: 1\r\n        })\r\n        .then(function (response) {\r\n            console.log(response);\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    stockQueryHandler = event => {\r\n    const query = event.target.value;\r\n    Axios.get(\"https://api.iextrading.com/1.0//stock/\" + query + \"/batch?types=quote,news,chart&range=1m&last=7\")\r\n        .then(response => {\r\n            const dates = Object.values(response.data.chart);\r\n            const dateArray = [];\r\n            const dataArray = [];\r\n            const highArray = [];\r\n            const lowArray = [];\r\n            dates.map(day => {\r\n                dateArray.push(day.label);\r\n                dataArray.push(day.close);\r\n                highArray.push(day.high);\r\n                lowArray.push(day.low);\r\n                return dateArray && dataArray && highArray && lowArray\r\n            })\r\n            this.setState({\r\n                    options: {\r\n                        chart: {\r\n                            background: '#e6ecff',\r\n                            markers: {\r\n                                colors:['#FF0000', '#00cc00', '#0000ff']\r\n                            },\r\n                            stacked: false,\r\n                            fontFamily: 'Patua One, cursive, serif',\r\n                            dropShadow: {\r\n                                enabled: true,\r\n                                top: 0,\r\n                                left: 0,\r\n                                blur: 3,\r\n                                opacity: 0.5\r\n                            },\r\n                            animations: {\r\n                                enabled: true,\r\n                                easing: 'easeout',\r\n                                speed: 350,\r\n                                animateGradually: {\r\n                                    enabled: true,\r\n                                    delay: 350\r\n                                },\r\n                                dynamicAnimation: {\r\n                                    enabled: true,\r\n                                    speed: 1100\r\n                                }\r\n                            }\r\n                        },\r\n                        xaxis: {\r\n                            categories: dateArray,\r\n                        },\r\n                        title: {\r\n                            text: response.data.quote.companyName,\r\n                            align: 'center',\r\n                            margin: 10,\r\n                            offsetX: 0,\r\n                            offsetY: 0,\r\n                            floating: false,\r\n                            style: {\r\n                                fontSize:  '30px',\r\n                                color:  '#263238'\r\n                            },\r\n                        },\r\n                    },\r\n                    series: [\r\n                        \r\n                        {\r\n                            name: 'High',\r\n                            type: 'column',\r\n                            data: highArray\r\n                        },\r\n                        {\r\n\r\n                            name: 'Low',\r\n                            type: 'column',\r\n                            data: lowArray\r\n                        },\r\n                        {\r\n                            name: 'Close',\r\n                            type: 'line',\r\n                            data: dataArray\r\n                        }\r\n                    ],\r\n                    companyName: response.data.quote.companyName,\r\n                    symbol: response.data.quote.symbol,\r\n                    market: response.data.quote.primaryExchange,\r\n                    latestPrice: response.data.quote.latestPrice,\r\n                    latestTime: response.data.quote.latestTime,\r\n                    open: response.data.quote.open,\r\n                    high: response.data.quote.week52High,\r\n                    low: response.data.quote.week52Low,\r\n                    news: response.data.news\r\n                    \r\n            })\r\n        \r\n        })\r\n\r\n    }\r\n\r\n    iexNasdaqGet = () => {\r\n        Axios.get(\"https://api.iextrading.com/1.0//stock/NFLX/batch?types=quote,news,chart&range=1m&last=7\")\r\n            .then(response => {\r\n                console.log(response.data);\r\n                const dates = Object.values(response.data.chart);\r\n                const dateArray = [];\r\n                const dataArray = [];\r\n                const highArray = [];\r\n                const lowArray = [];\r\n                dates.map(day => {\r\n                    dateArray.push(day.label);\r\n                    dataArray.push(day.close);\r\n                    highArray.push(day.high);\r\n                    lowArray.push(day.low);\r\n                    return dateArray && dataArray && highArray && lowArray\r\n                })\r\n                this.setState({\r\n                        options: {\r\n                            chart: {\r\n                                background: '#e6ecff',\r\n                                markers: {\r\n                                    colors:['#FF0000', '#00cc00', '#0000ff']\r\n                                },\r\n                                stacked: false,\r\n                                fontFamily: 'Patua One, cursive, serif',\r\n                                dropShadow: {\r\n                                    enabled: true,\r\n                                    top: 0,\r\n                                    left: 0,\r\n                                    blur: 3,\r\n                                    opacity: 0.5\r\n                                },\r\n                                animations: {\r\n                                    enabled: true,\r\n                                    easing: 'easeout',\r\n                                    speed: 350,\r\n                                    animateGradually: {\r\n                                        enabled: true,\r\n                                        delay: 350\r\n                                    },\r\n                                    dynamicAnimation: {\r\n                                        enabled: true,\r\n                                        speed: 1100\r\n                                    }\r\n                                }\r\n                            },\r\n                            xaxis: {\r\n                                categories: dateArray,\r\n                            },\r\n                            title: {\r\n                                text: response.data.quote.companyName,\r\n                                align: 'center',\r\n                                margin: 10,\r\n                                offsetX: 0,\r\n                                offsetY: 0,\r\n                                floating: false,\r\n                                style: {\r\n                                  fontSize:  '30px',\r\n                                  color:  '#263238'\r\n                                },\r\n                            },\r\n                        },\r\n                        series: [\r\n                            \r\n                            {\r\n                                name: 'High',\r\n                                type: 'column',\r\n                                data: highArray\r\n                            },\r\n                            {\r\n\r\n                                name: 'Low',\r\n                                type: 'column',\r\n                                data: lowArray\r\n                            },\r\n                            {\r\n                                name: 'Close',\r\n                                type: 'line',\r\n                                data: dataArray\r\n                            }\r\n                        ],\r\n                        companyName: response.data.quote.companyName,\r\n                        symbol: response.data.quote.symbol,\r\n                        market: response.data.quote.primaryExchange,\r\n                        latestPrice: response.data.quote.latestPrice,\r\n                        latestTime: response.data.quote.latestTime,\r\n                        open: response.data.quote.open,\r\n                        high: response.data.quote.week52High,\r\n                        low: response.data.quote.week52Low,\r\n                        news: response.data.news\r\n                        \r\n                })\r\n            \r\n            })\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                {this.state.showModal === true ?\r\n                    <Modal shares={this.state.shares}\r\n                    company={this.state.companyName}\r\n                    total={this.state.total}\r\n                    cancelOrderHandler={this.cancelOrderHandler}\r\n                    buyStockHandler={this.buyStockHandler}\r\n                    /> : null\r\n                }\r\n                {this.state.showBuyModal === true ?\r\n                    <BuyModal cancelOrderHandler={this.cancelOrderHandler}/> : null\r\n                }\r\n                \r\n                <Wrapper>\r\n                    <Banner \r\n                        exchange={\"The Nasdaq Stock Market\"}\r\n                        info={\"The NASDAQ (National Association of Securities Dealers Automated Quotations) Stock Market is an American stock exchange.  It is the second largest stock exchange in the world by market capitalization, behind only the NYSE located in the same city.  It is an electronic exchange where stocks are traded through an automated network of computers instead of a trading floor.  As a general rule of thumb, it is where most technology stocks are traded.  Major stocks that trade on the NASDAQ include Apple, Amazon, Microsoft, Facebook, Intel, and Oracle.\"}\r\n                    />\r\n                </Wrapper>\r\n                \r\n            \r\n                <Wrapper>\r\n                    <div className=\"list-wrapper\">\r\n                        {this.state.showStockInfo === true ?\r\n                            <StockInfo company={this.state.companyName}\r\n                            latestPrice={this.state.latestPrice}\r\n                            latestTime={this.state.latestTime}\r\n                            open={this.state.open}\r\n                            high={this.state.high}\r\n                            low={this.state.low}\r\n                            sharesNum={this.state.sharesNum}\r\n                            newsHeadlinesHandler={this.newsHeadlinesHandler}\r\n                            sharesPurchaseHandler={this.sharesPurchaseHandler}\r\n                            sharesInputHandler={this.sharesInputHandler}\r\n                            /> : null\r\n                        }\r\n                        {this.state.showHeadlines === true ?\r\n                            <Headlines news={this.state.news}\r\n                                       showQuoteHandler={this.showQuoteHandler}\r\n                            /> : null\r\n                    \r\n                        }\r\n                    </div>\r\n                    \r\n                    <MyStockChart options={this.state.options} \r\n                                  series={this.state.series}/>\r\n                    <div className=\"list-wrapper\">\r\n                        <Stocklist search={this.state.search}\r\n                                inputChangeHandler={this.inputChangeHandler}\r\n                                stockSearchHandler={this.stockSearchHandler}\r\n                                allStocks={this.allNasdaq}\r\n                                exchange={\"NASDAQ\"}\r\n                        />\r\n                        {this.state.showTable === true ?\r\n                            <StockTable \r\n                                stocks={this.state.stocks}\r\n                                stockQueryHandler={this.stockQueryHandler}\r\n                            /> : null}\r\n                    </div>\r\n                    \r\n                </Wrapper>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Nasdaq;","import React, { Component } from \"react\";\r\nimport \"./Crypto.css\";\r\nimport Axios from \"axios\";\r\nimport MyStockChart from \"../../components/StockChart\";\r\nimport Banner from \"../../components/Banner\";\r\nimport Wrapper from \"../../components/Wrapper\";\r\nimport StockInfo from \"../../components/StockInfo\";\r\nimport StockTable from \"../../components/Table\";\r\nimport Headlines from \"../../components/Headlines\";\r\nimport Modal from \"../../components/Modal\";\r\nimport BuyModal from \"../../components/BuyModal\";\r\n\r\n\r\n\r\nclass CryptoCurrency extends Component {\r\n    state = {\r\n        options: {},\r\n        series: [],\r\n        stocks: [],\r\n        news: [],\r\n        companyName: \"\",\r\n        symbol: \"\",\r\n        market: \"\",\r\n        latestPrice: \"\",\r\n        latestTime: \"\",\r\n        open: \"\",\r\n        high: \"\",\r\n        low: \"\",\r\n        search: \"\",\r\n        shares: \"\",\r\n        total: \"\",\r\n        showTable: false,\r\n        showHeadlines: false,\r\n        showStockInfo: true,\r\n        showModal: false,\r\n        showBuyModal: false,\r\n        currentUserEmail: \"\",\r\n        currentUserName: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.iexCryptoGet();\r\n        this.allCrypto();\r\n        const idToken = JSON.parse(localStorage.getItem('okta-token-storage'));\r\n        this.setState({\r\n            currentUserEmail: idToken.idToken.claims.email,\r\n            currentUserName: idToken.idToken.claims.name\r\n        });\r\n    }\r\n\r\n    allCrypto = () => {\r\n        Axios.get(\"/api/allCrypto\")\r\n            .then(response => {\r\n                this.setState({\r\n                    stocks: response.data,\r\n                    showTable: true\r\n                })\r\n            });\r\n    }\r\n\r\n    inputChangeHandler = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    sharesInputHandler = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    stockSearchHandler = event => {\r\n        event.preventDefault();\r\n        Axios.get(\"/api/nyse/\" + this.state.search)\r\n            .then(response => {\r\n                this.setState({\r\n                    stocks: response.data,\r\n                    showTable: true\r\n                })\r\n            });\r\n    }\r\n\r\n    newsHeadlinesHandler = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showStockInfo: false,\r\n            showHeadlines: true\r\n        });\r\n    }\r\n\r\n    showQuoteHandler = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showHeadlines: false,\r\n            showStockInfo: true\r\n        });\r\n    }\r\n\r\n    sharesPurchaseHandler = () => {\r\n        const mult = this.state.latestPrice;\r\n        const mult1 = this.state.shares;\r\n        const answer = mult * mult1;\r\n        this.setState({\r\n            total: answer.toFixed(2),\r\n            showModal: true\r\n        });\r\n    }\r\n\r\n    cancelOrderHandler = () => {\r\n        this.setState({\r\n            showModal: false,\r\n            showBuyModal: false\r\n        });\r\n    }\r\n\r\n    buyStockHandler = () => {\r\n        this.setState({\r\n            showModal: false,\r\n            showBuyModal: true\r\n        });\r\n        let todayDate = new Date().toISOString().slice(0,10);\r\n        Axios.post(\"api/stocks\", {\r\n            symbol: this.state.symbol,\r\n            company_name: this.state.companyName,\r\n            market: this.state.market,\r\n            shares: this.state.shares,\r\n            buy_date: todayDate,\r\n            buy_price: this.state.latestPrice,\r\n            current_price: this.state.latestPrice,\r\n            UserId: 1\r\n        })\r\n        .then(function (response) {\r\n            console.log(response);\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n\r\n\r\n    stockQueryHandler = event => {\r\n        const query = event.target.value;\r\n        Axios.get(\"https://api.iextrading.com/1.0//stock/\" + query + \"/batch?types=quote,news,chart&range=1m&last=7\")\r\n            .then(response => {\r\n                console.log(response);\r\n                const dates = Object.values(response.data.chart);\r\n                const dateArray = [];\r\n                const dataArray = [];\r\n                const highArray = [];\r\n                const lowArray = [];\r\n                dates.map(day => {\r\n                    dateArray.push(day.label);\r\n                    dataArray.push(day.close);\r\n                    highArray.push(day.high);\r\n                    lowArray.push(day.low);\r\n                    return dateArray && dataArray && highArray && lowArray\r\n                })\r\n                this.setState({\r\n                        options: {\r\n                            chart: {\r\n                                background: '#e6ecff',\r\n                                markers: {\r\n                                    colors:['#FF0000', '#00cc00', '#0000ff']\r\n                                },\r\n                                stacked: false,\r\n                                fontFamily: 'Patua One, cursive, serif',\r\n                                dropShadow: {\r\n                                    enabled: true,\r\n                                    top: 0,\r\n                                    left: 0,\r\n                                    blur: 3,\r\n                                    opacity: 0.5\r\n                                },\r\n                                animations: {\r\n                                    enabled: true,\r\n                                    easing: 'easeout',\r\n                                    speed: 350,\r\n                                    animateGradually: {\r\n                                        enabled: true,\r\n                                        delay: 350\r\n                                    },\r\n                                    dynamicAnimation: {\r\n                                        enabled: true,\r\n                                        speed: 1100\r\n                                    }\r\n                                }\r\n                            },\r\n                            xaxis: {\r\n                                categories: dateArray,\r\n                            },\r\n                            title: {\r\n                                text: response.data.quote.companyName,\r\n                                align: 'center',\r\n                                margin: 10,\r\n                                offsetX: 0,\r\n                                offsetY: 0,\r\n                                floating: false,\r\n                                style: {\r\n                                  fontSize:  '30px',\r\n                                  color:  '#263238'\r\n                                },\r\n                            },\r\n                        },\r\n                        series: [\r\n                            \r\n                            {\r\n                                name: 'High',\r\n                                type: 'column',\r\n                                data: highArray\r\n                            },\r\n                            {\r\n\r\n                                name: 'Low',\r\n                                type: 'column',\r\n                                data: lowArray\r\n                            },\r\n                            {\r\n                                name: 'Close',\r\n                                type: 'line',\r\n                                data: dataArray\r\n                            }\r\n                        ],\r\n                        companyName: response.data.quote.companyName,\r\n                        latestPrice: response.data.quote.latestPrice,\r\n                        latestTime: response.data.quote.latestTime,\r\n                        open: response.data.quote.open,\r\n                        high: response.data.quote.week52High,\r\n                        low: response.data.quote.week52Low,\r\n                        news: response.data.news\r\n                        \r\n                })\r\n            \r\n            })\r\n\r\n    }\r\n\r\n    iexCryptoGet = () => {\r\n        Axios.get(\"https://api.iextrading.com/1.0//stock/BTCUSDT/batch?types=quote,news,chart&range=1m&last=7\")\r\n            .then(response => {\r\n                console.log(response.data);\r\n                const dates = Object.values(response.data.chart);\r\n                const dateArray = [];\r\n                const dataArray = [];\r\n                const highArray = [];\r\n                const lowArray = [];\r\n                dates.map(day => {\r\n                    dateArray.push(day.label);\r\n                    dataArray.push(day.close);\r\n                    highArray.push(day.high);\r\n                    lowArray.push(day.low);\r\n                    return dateArray && dataArray && highArray && lowArray\r\n                })\r\n                this.setState({\r\n                        options: {\r\n                            chart: {\r\n                                background: '#e6ecff',\r\n                                markers: {\r\n                                    colors:['#FF0000', '#00cc00', '#0000ff']\r\n                                },\r\n                                stacked: false,\r\n                                fontFamily: 'Patua One, cursive, serif',\r\n                                dropShadow: {\r\n                                    enabled: true,\r\n                                    top: 0,\r\n                                    left: 0,\r\n                                    blur: 3,\r\n                                    opacity: 0.5\r\n                                },\r\n                                animations: {\r\n                                    enabled: true,\r\n                                    easing: 'easeout',\r\n                                    speed: 350,\r\n                                    animateGradually: {\r\n                                        enabled: true,\r\n                                        delay: 350\r\n                                    },\r\n                                    dynamicAnimation: {\r\n                                        enabled: true,\r\n                                        speed: 1100\r\n                                    }\r\n                                }\r\n                            },\r\n                            xaxis: {\r\n                                categories: dateArray,\r\n                            },\r\n                            title: {\r\n                                text: response.data.quote.companyName,\r\n                                align: 'center',\r\n                                margin: 10,\r\n                                offsetX: 0,\r\n                                offsetY: 0,\r\n                                floating: false,\r\n                                style: {\r\n                                  fontSize:  '30px',\r\n                                  color:  '#263238'\r\n                                },\r\n                            },\r\n                        },\r\n                        series: [\r\n                            \r\n                            {\r\n                                name: 'High',\r\n                                type: 'column',\r\n                                data: highArray\r\n                            },\r\n                            {\r\n\r\n                                name: 'Low',\r\n                                type: 'column',\r\n                                data: lowArray\r\n                            },\r\n                            {\r\n                                name: 'Close',\r\n                                type: 'line',\r\n                                data: dataArray\r\n                            }\r\n                        ],\r\n                        companyName: response.data.quote.companyName,\r\n                        latestPrice: response.data.quote.latestPrice,\r\n                        latestTime: response.data.quote.latestTime,\r\n                        open: response.data.quote.open,\r\n                        high: response.data.quote.week52High,\r\n                        low: response.data.quote.week52Low,\r\n                        news: response.data.news\r\n                        \r\n                })\r\n            \r\n            })\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                {this.state.showModal === true ?\r\n                    <Modal shares={this.state.shares}\r\n                    company={this.state.companyName}\r\n                    total={this.state.total}\r\n                    cancelOrderHandler={this.cancelOrderHandler}\r\n                    buyStockHandler={this.buyStockHandler}\r\n                    /> : null\r\n                }\r\n                {this.state.showBuyModal === true ?\r\n                    <BuyModal cancelOrderHandler={this.cancelOrderHandler}/> : null\r\n                }\r\n                \r\n                <Wrapper>\r\n                    <Banner \r\n                        exchange={\"The Crypto Exchange\"}\r\n                        info={\"A crypto currency is a digital asset designed to work as a medium of exchange that uses strong cryptography to secure financial transactions, control the creation of additional units, and verify the transfer of assets.  Crytocurrencies use decentralized control as opposed to centralized digital currency and central banking systems.  Bitcoin, first released as open-source software in 2009, is generally considered the first decentralized crypto currency.\"}\r\n                    />\r\n                </Wrapper>\r\n                \r\n            \r\n                <Wrapper>\r\n                    <div className=\"list-wrapper\">\r\n                        {this.state.showStockInfo === true ?\r\n                            <StockInfo company={this.state.companyName}\r\n                            latestPrice={this.state.latestPrice}\r\n                            latestTime={this.state.latestTime}\r\n                            open={this.state.open}\r\n                            high={this.state.high}\r\n                            low={this.state.low}\r\n                            sharesNum={this.state.sharesNum}\r\n                            newsHeadlinesHandler={this.newsHeadlinesHandler}\r\n                            sharesPurchaseHandler={this.sharesPurchaseHandler}\r\n                            sharesInputHandler={this.sharesInputHandler}\r\n                            /> : null\r\n                        }\r\n                        {this.state.showHeadlines === true ?\r\n                            <Headlines news={this.state.news}\r\n                                       showQuoteHandler={this.showQuoteHandler}\r\n                            /> : null\r\n                    \r\n                        }\r\n                    </div>\r\n                    \r\n                    <MyStockChart options={this.state.options} \r\n                                  series={this.state.series}/>\r\n                    <div className=\"list-wrapper\">\r\n                        <h2 className=\"crypto-h2\">Marketplace</h2>\r\n                        {this.state.showTable === true ?\r\n                            <StockTable \r\n                                stocks={this.state.stocks}\r\n                                stockQueryHandler={this.stockQueryHandler}\r\n                            /> : null}\r\n                    </div>\r\n                    \r\n                </Wrapper>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CryptoCurrency;","import React from \"react\";\r\nimport \"./PortfolioTable.css\";\r\n\r\nconst PortfolioTable = (props) => (\r\n    <div>\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Symbol</th>\r\n                    <th>Company Name</th>\r\n                    <th>Market</th>\r\n                    <th>Shares</th>\r\n                    <th>Buy Date</th>\r\n                    <th>Buy Price</th>\r\n                    <th>Current Price</th>\r\n                    <th>Total Invested</th>\r\n                    <th>Net Gain/Loss</th>\r\n                    <th>Update</th>\r\n                    <th>Sell</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {props.owns.map(owns => (\r\n                    <tr className=\"port-rows\" key={owns.id}>\r\n                        <td>{owns.symbol}</td>\r\n                        <td>{owns.company_name}</td>\r\n                        <td>{owns.market}</td>\r\n                        <td>{owns.shares}</td>\r\n                        <td>{owns.buy_date}</td>\r\n                        <td>{owns.buy_price}</td>\r\n                        <td>{owns.current_price}</td>\r\n                        <td>{owns.buy_price * owns.shares}</td>\r\n                        <td>{owns.net_total}</td>\r\n                        <td><button onClick={props.updatePriceHandler} value={owns.id} name={owns.symbol}>Update</button></td>\r\n                        <td><button onClick={props.sellStockHandler} value={owns.id}>Sell</button></td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n);\r\n\r\nexport default PortfolioTable;","import React from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nimport \"./BarChart.css\";\r\n\r\nconst BarChart = (props) => (\r\n    <div className=\"barchart-div\">\r\n        <Chart\r\n            options={props.options}\r\n            series={props.series}\r\n            labels={props.labels}\r\n            type=\"pie\"\r\n            height=\"100%\"\r\n            width=\"100%\"\r\n        />\r\n    </div>\r\n);\r\n\r\nexport default BarChart;","import React, { Component } from \"react\";\r\nimport Axios from 'axios';\r\nimport \"./Portfolio.css\";\r\nimport PortfolioTable from \"../../components/PortfolioTable\";\r\nimport BarChart from \"../../components/BarChart\";\r\nimport Wrapper from \"../../components/Wrapper\";\r\n\r\nconst userId = 1;\r\n\r\nclass Portfolio extends Component {\r\n    state = {\r\n        options: {},\r\n        series: [],\r\n        labels: [],\r\n        currentUserName: '',\r\n        currentUserEmail: '',\r\n        stocksOwned: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        const idToken = JSON.parse(localStorage.getItem('okta-token-storage'));\r\n        this.setState({\r\n            currentUserEmail: idToken.idToken.claims.email,\r\n            currentUserName: idToken.idToken.claims.name\r\n        });\r\n        this.showPortfolioHandler();\r\n    }\r\n\r\n    showPortfolioHandler = () => {\r\n        Axios.get('/api/stocksAll/' + userId)\r\n        .then(response => {\r\n            console.log(response.data);\r\n            const donutData = Object.values(response.data);\r\n            const companyArray = [];\r\n            const totalArray = [];\r\n            donutData.map(item => {\r\n                companyArray.push(item.company_name);\r\n                totalArray.push(item.shares * item.buy_price);\r\n                return companyArray && totalArray\r\n            })\r\n            console.log(totalArray);\r\n            this.setState({\r\n                stocksOwned: response.data,\r\n                options: {\r\n                    chart: {\r\n                        width: 500\r\n                    }\r\n                },\r\n                series: totalArray,\r\n                labels: companyArray\r\n            });\r\n        });\r\n    }\r\n\r\n    sellStockHandler = (event) => {\r\n        const soldStock = event.target.value;\r\n        Axios.delete('/api/stocks/' + soldStock)\r\n        .then(response => {\r\n            console.log(response);\r\n            this.showPortfolioHandler();\r\n        });\r\n    }\r\n\r\n    updatePriceHandler = (event) => {\r\n        const updateQuery = event.target.name;\r\n        //const updatedStock = event.target.value;\r\n        Axios.get(\"https://api.iextrading.com/1.0//stock/\" + updateQuery + \"/batch?types=quote,news,chart&range=1m&last=7\")\r\n            .then(response => { \r\n                console.log(response.data.quote.latestPrice);\r\n                const updatedData = {\r\n                    company_name: response.data.quote.companyName,\r\n                    current_price: response.data.quote.latestPrice\r\n                }\r\n                \r\n                Axios.put('/api/stocks', updatedData)\r\n                .then(response => {\r\n                    console.log(\"updated\" + response);\r\n                });\r\n            });\r\n    }\r\n\r\n\r\n    render() {\r\n    \r\n        return (\r\n            <div>\r\n                <div className=\"port-header-div\">\r\n                    <h1>{ this.state.currentUserName }'s Portfolio</h1>\r\n                </div>\r\n                <BarChart options={this.state.options}\r\n                        series={this.state.series}\r\n                        labels={this.state.labels}\r\n                />\r\n                <Wrapper>\r\n                    <PortfolioTable owns={this.state.stocksOwned}\r\n                                    updatePriceHandler={this.updatePriceHandler}\r\n                                    sellStockHandler={this.sellStockHandler}\r\n                    />\r\n                </Wrapper>\r\n                \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Portfolio;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Nav.css\";\r\n\r\nconst Nav = () => (\r\n    <div className=\"nav-div\">\r\n        <Link className=\"navbar-a\" to=\"/\">HOME</Link>\r\n        \r\n        <nav>\r\n            <Link className=\"navbar-a\" to=\"/nyse\">NYSE</Link>\r\n            <Link className=\"navbar-a\" to=\"/nasdaq\">NASDAQ</Link>\r\n            <Link className=\"navbar-a\" to=\"/crypto\">CRYPTO</Link>\r\n            <Link className=\"navbar-a\" to=\"/portfolio\">PORTFOLIO</Link>\r\n        </nav>\r\n    </div>\r\n);\r\n\r\nexport default Nav;","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport OktaSignIn from \"@okta/okta-signin-widget\";\r\nimport \"@okta/okta-signin-widget/dist/css/okta-sign-in.min.css\";\r\nimport \"@okta/okta-signin-widget/dist/css/okta-theme.css\";\r\n\r\nclass SignInWidget extends Component {\r\n    componentDidMount() {\r\n        const el = ReactDOM.findDOMNode(this);\r\n        this.widget = new OktaSignIn({\r\n            baseUrl: this.props.baseUrl,\r\n            logo: 'logo.png'\r\n        });\r\n        this.widget.renderEl({el}, this.props.onSuccess, this.props.onError);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.widget.remove();\r\n    }\r\n\r\n    render() {\r\n        return <div />\r\n    }\r\n};\r\n\r\nexport default SignInWidget;","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport SignInWidget from \"./SignInWidget\";\r\nimport { withAuth } from \"@okta/okta-react\";\r\n\r\nexport default withAuth(class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSuccess = this.onSuccess.bind(this);\r\n        this.onError = this.onError.bind(this);\r\n        this.state = {\r\n            authentication: null\r\n        };\r\n        this.checkAuthentication();\r\n    }\r\n\r\n    async checkAuthentication() {\r\n        const authenticated = await this.props.auth.isAuthenticated();\r\n        if (authenticated !== this.state.authenticated) {\r\n            this.setState({ authenticated });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.checkAuthentication();\r\n    }\r\n\r\n    onSuccess(res) {\r\n        return this.props.auth.redirect({\r\n            sessionToken: res.session.token\r\n        });\r\n    }\r\n\r\n    onError(err) {\r\n        console.log(\"error loggin in\", err);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.authenticated === null) return null;\r\n        return this.state.authenticated ?\r\n        <Redirect to={{ pathname: '/' }}/> :\r\n        <SignInWidget\r\n            baseUrl={this.props.baseUrl}\r\n            onSuccess={this.onSuccess}\r\n            onError={this.onError}\r\n        />\r\n    }\r\n});","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Security, SecureRoute, ImplicitCallback } from '@okta/okta-react';\nimport './App.css';\nimport Home from \"./pages/Home\";\nimport Nyse from \"./pages/Nyse\";\nimport Nasdaq from \"./pages/Nasdaq\";\nimport CryptoCurrency from \"./pages/Crypto\";\nimport Portfolio from \"./pages/Portfolio\";\nimport Nav from \"./components/Nav\";\nimport Login from \"./components/Auth/Login\";\n\nconst config = {\n  issuer: 'https://dev-873570.oktapreview.com/oauth2/default',\n  redirect_uri: window.location.origin + '/implicit/callback',\n  client_id: '0oaic8dsmd0mIfUrA0h7'\n}\n\nfunction onAuthRequired({history}) {\n  history.push('/login');\n}\n\nconst App = () => (\n  <Router>\n    <Security issuer={config.issuer}\n              client_id={config.client_id}\n              redirect_uri={config.redirect_uri}\n              onAuthRequired={onAuthRequired}\n    >\n      <div>\n        <Nav />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <SecureRoute exact path=\"/nyse\" component={Nyse} />\n          <SecureRoute exact path=\"/nasdaq\" component={Nasdaq} />\n          <SecureRoute exact path=\"/crypto\" component={CryptoCurrency} />\n          <SecureRoute exact path=\"/portfolio\" component={Portfolio} />\n          <Route path=\"/login\" render={() => <Login baseUrl=\"https://dev-873570.oktapreview.com\" />} />\n          <Route path='/implicit/callback' component={ImplicitCallback}/>\n        </Switch>\n      </div>\n    </Security>\n  </Router>\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}